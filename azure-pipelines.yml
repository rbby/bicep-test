# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: windows-latest

steps:

  - powershell: |
      Get-ChildItem -Path $(Pipeline.Workspace) -Recurse
    displayName: Show Workdir content
      
  - task: AzurePowerShell@5
    inputs:
      azureSubscription: 'VSEnterprise'
      ScriptType: 'InlineScript'
      azurePowerShellVersion: 'LatestVersion'
      pwsh: false
      Inline: |
      
        New-AzResourceGroupDeployment `
          -DeploymentName 'ps-defId_$(System.DefinitionId)-runId_$(Build.BuildId)' `
          -ResourceGroupName 'rg-test-template-spec' `
          -TemplateFile '$(Build.SourcesDirectory)/main.bicep' 

    displayName: 'ps deploy'
    continueOnError: true
    
  - task: AzureCLI@2
    inputs:
      azureSubscription: 'VSEnterprise'
      scriptType: ps
      scriptLocation: inlineScript
      inlineScript: |

          Write-Host("Deploy")
          az deployment group create -g 'rg-test-template-spec' `
              --mode Incremental `
              --template-file '$(Build.SourcesDirectory)/main.bicep'  `
              --name 'azcli-defId_$(System.DefinitionId)-runId_$(Build.BuildId)'

    displayName: 'az cli '
    continueOnError: true

  - task: AzureResourceManagerTemplateDeployment@3
    displayName: 'AzureResourceManagerTemplateDeployment'
    inputs:
      azureResourceManagerConnection: 'VSEnterprise'
      resourceGroupName: 'rg-test-template-spec'
      location: 'West Europe'
      csmFile: 'main.bicep'
      deploymentMode: 'Incremental'
      deploymentScope: 'Resource Group'
      deploymentName: 'armdeploy-defId_$(System.DefinitionId)-runId_$(Build.BuildId)'
    continueOnError: true
  
